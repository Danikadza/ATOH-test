/// <reference types="node" />
import EventEmitter from "events";
import { ISslCredentials } from "../utils/ssl-credentials";
import { IPoolSettings } from "../driver";
import DiscoveryService from "../discovery/discovery-service";
import { Logger } from "../logging";
import { TableSession } from "./table-session";
import { ClientOptions } from "../utils";
import { IAuthService } from "../credentials/i-auth-service";
export interface ITableClientSettings {
    database: string;
    authService: IAuthService;
    sslCredentials?: ISslCredentials;
    poolSettings?: IPoolSettings;
    clientOptions?: ClientOptions;
    discoveryService: DiscoveryService;
    logger: Logger;
}
export declare class TableClient extends EventEmitter {
    private pool;
    constructor(settings: ITableClientSettings);
    withSession<T>(callback: (session: TableSession) => Promise<T>, timeout?: number): Promise<T>;
    withSessionRetry<T>(callback: (session: TableSession) => Promise<T>, timeout?: number, maxRetries?: number): Promise<T>;
    destroy(): Promise<void>;
}
