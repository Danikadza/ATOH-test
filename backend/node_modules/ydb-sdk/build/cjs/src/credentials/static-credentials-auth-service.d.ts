import { ISslCredentials } from "../utils/ssl-credentials";
import * as grpc from "@grpc/grpc-js";
import { IAuthService } from "./i-auth-service";
interface StaticCredentialsAuthOptions {
    /** Custom ssl sertificates. If you use it in driver, you must use it here too */
    sslCredentials?: ISslCredentials;
    /**
     * Timeout for token request in milliseconds
     * @default 10 * 1000
     */
    tokenRequestTimeout?: number;
    /** Expiration time for token in milliseconds
     * @default 6 * 60 * 60 * 1000
     */
    tokenExpirationTimeout?: number;
}
export declare class StaticCredentialsAuthService implements IAuthService {
    private readonly tokenRequestTimeout;
    private readonly tokenExpirationTimeout;
    private tokenTimestamp;
    private token;
    private tokenUpdatePromise;
    private user;
    private password;
    private endpoint;
    private sslCredentials;
    constructor(user: string, password: string, endpoint: string, options?: StaticCredentialsAuthOptions);
    private get expired();
    private sendTokenRequest;
    private updateToken;
    getAuthMetadata(): Promise<grpc.Metadata>;
}
export {};
