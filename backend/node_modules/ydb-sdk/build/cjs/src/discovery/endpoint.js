"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoint = void 0;
const luxon_1 = require("luxon");
const ydb_sdk_proto_1 = require("ydb-sdk-proto");
class Endpoint extends ydb_sdk_proto_1.Ydb.Discovery.EndpointInfo {
    static fromString(host) {
        const match = Endpoint.HOST_RE.exec(host);
        if (match) {
            const info = {
                address: match[1]
            };
            if (match[2]) {
                info.port = Number(match[2]);
            }
            return this.create(info);
        }
        throw new Error(`Provided incorrect host "${host}"`);
    }
    constructor(properties, database) {
        super(properties);
        this.database = database;
        this.pessimizedAt = null;
    }
    /*
     Update current endpoint with the attributes taken from another endpoint.
     */
    update(_endpoint) {
        // do nothing for now
        return this;
    }
    get pessimized() {
        if (this.pessimizedAt) {
            return luxon_1.DateTime.utc().diff(this.pessimizedAt).valueOf() < Endpoint.PESSIMIZATION_WEAR_OFF_PERIOD;
        }
        return false;
    }
    pessimize() {
        this.pessimizedAt = luxon_1.DateTime.utc();
    }
    toString() {
        let result = this.address;
        if (this.port) {
            result += ':' + this.port;
        }
        return result;
    }
}
exports.Endpoint = Endpoint;
Endpoint.HOST_RE = /^([^:]+):?(\d)*$/;
Endpoint.PESSIMIZATION_WEAR_OFF_PERIOD = 60 * 1000;
